function n(){}function e(n){return n()}function t(){return Object.create(null)}function o(n){n.forEach(e)}function r(n){return"function"==typeof n}function s(n,e){return n!=n?e==e:n!==e||n&&"object"==typeof n||"function"==typeof n}function a(n,e){n.appendChild(e)}function i(n,e,t){n.insertBefore(e,t||null)}function c(n){n.parentNode.removeChild(n)}function l(n){return document.createElement(n)}function d(n){return document.createTextNode(n)}function u(n,e,t){null==t?n.removeAttribute(e):n.getAttribute(e)!==t&&n.setAttribute(e,t)}function p(n,e,t){n.classList[t?"add":"remove"](e)}let f;function g(n){f=n}function _(){if(!f)throw new Error("Function called outside component initialization");return f}function m(){const n=_();return(e,t)=>{const o=n.$$.callbacks[e];if(o){const r=function(n,e){const t=document.createEvent("CustomEvent");return t.initCustomEvent(n,!1,!1,e),t}(e,t);o.slice().forEach((e=>{e.call(n,r)}))}}}function h(n,e){const t=n.$$.callbacks[e.type];t&&t.slice().forEach((n=>n(e)))}const v=[],b=[],y=[],w=[],$=Promise.resolve();let k=!1;function x(n){y.push(n)}let E=!1;const j=new Set;function M(){if(!E){E=!0;do{for(let n=0;n<v.length;n+=1){const e=v[n];g(e),N(e.$$)}for(g(null),v.length=0;b.length;)b.pop()();for(let n=0;n<y.length;n+=1){const e=y[n];j.has(e)||(j.add(e),e())}y.length=0}while(v.length);for(;w.length;)w.pop()();k=!1,E=!1,j.clear()}}function N(n){if(null!==n.fragment){n.update(),o(n.before_update);const e=n.dirty;n.dirty=[-1],n.fragment&&n.fragment.p(n.ctx,e),n.after_update.forEach(x)}}const A=new Set;let C;function L(n,e){n&&n.i&&(A.delete(n),n.i(e))}function O(n,e,t,o){if(n&&n.o){if(A.has(n))return;A.add(n),C.c.push((()=>{A.delete(n),o&&(t&&n.d(1),o())})),n.o(e)}}function S(n,t,s){const{fragment:a,on_mount:i,on_destroy:c,after_update:l}=n.$$;a&&a.m(t,s),x((()=>{const t=i.map(e).filter(r);c?c.push(...t):o(t),n.$$.on_mount=[]})),l.forEach(x)}function T(n,e){const t=n.$$;null!==t.fragment&&(o(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function F(n,e){-1===n.$$.dirty[0]&&(v.push(n),k||(k=!0,$.then(M)),n.$$.dirty.fill(0)),n.$$.dirty[e/31|0]|=1<<e%31}function J(e,r,s,a,i,l,d=[-1]){const u=f;g(e);const p=r.props||{},_=e.$$={fragment:null,ctx:null,props:l,update:n,not_equal:i,bound:t(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(u?u.$$.context:[]),callbacks:t(),dirty:d,skip_bound:!1};let m=!1;if(_.ctx=s?s(e,p,((n,t,...o)=>{const r=o.length?o[0]:t;return _.ctx&&i(_.ctx[n],_.ctx[n]=r)&&(!_.skip_bound&&_.bound[n]&&_.bound[n](r),m&&F(e,n)),t})):[],_.update(),m=!0,o(_.before_update),_.fragment=!!a&&a(_.ctx),r.target){if(r.hydrate){const n=function(n){return Array.from(n.childNodes)}(r.target);_.fragment&&_.fragment.l(n),n.forEach(c)}else _.fragment&&_.fragment.c();r.intro&&L(e.$$.fragment),S(e,r.target,r.anchor),M()}g(u)}class P{$destroy(){T(this,1),this.$destroy=n}$on(n,e){const t=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return t.push(e),()=>{const n=t.indexOf(e);-1!==n&&t.splice(n,1)}}$set(n){var e;this.$$set&&(e=n,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}let D=1;function K(n){let e=n.action,t=n.cmd_id,o=this.pending_cmds.get(t);if(o){if(this.pending_cmds.delete(t),"cmd_error"===e){let{message:e,stack:t}=n,r=new Error(e);r.stack=t,o.reject(r)}"cmd_ok"===e&&o.resolve(n.args||"ok")}else console.error("command not found",t,n,[...this.pending_cmds.keys()])}function R(n){if(n.source!==this.iframe.contentWindow)return;const{action:e,args:t}=n.data;switch(e){case"cmd_error":case"cmd_ok":return K.call(this,n.data);case"fetch_progress":return this.handlers.on_fetch_progress(t.remaining);case"error":return this.handlers.on_error(n.data);case"unhandledrejection":return this.handlers.on_unhandled_rejection(n.data);case"console":return this.handlers.on_console(n.data);case"console_group":return this.handlers.on_console_group(n.data);case"console_group_collapsed":return this.handlers.on_console_group_collapsed(n.data);case"console_group_end":return this.handlers.on_console_group_end(n.data);default:const o="on_"+e;"function"==typeof this.handlers[o]&&this.handlers[o](n.data)}}class U{constructor(n,e){this.iframe=n,this.handlers=e,this.pending_cmds=new Map,this.handle_event=R.bind(this),window.addEventListener("message",this.handle_event,!1)}destroy(){window.removeEventListener("message",this.handle_event)}iframe_command(n,e){return new Promise(((t,o)=>{const r=D++;this.pending_cmds.set(r,{resolve:t,reject:o}),this.iframe.contentWindow.postMessage({action:n,cmd_id:r,args:e},"*")}))}eval(n){return this.iframe_command("eval",{script:n})}add_script(n){return this.iframe_command("add_script",n)}add_script_content(n){return this.iframe_command("add_script_content",n)}add_style(n){return this.iframe_command("add_style",n)}add_asset(n){return this.iframe_command("add_asset",n)}handle_links(){return this.iframe_command("catch_clicks",{})}}function W(n){let e;return{c(){e=l("strong"),e.innerHTML="<em>Sorry, an error occured while executing the NFT.</em>",u(e,"class","beyondnft__sandbox__error svelte-1bwdt9k")},m(n,t){i(n,e,t)},d(n){n&&c(e)}}}function Y(e){let t,o,r,s,f,g=e[3]&&W();return{c(){t=l("div"),o=l("iframe"),f=d(" "),g&&g.c(),u(o,"title","Sandbox"),u(o,"sandbox",r="allow-scripts allow-pointer-lock allow-popups "+e[0]),u(o,"srcdoc",s=e[4]("<!DOCTYPE html>\n<html>\n  <head>\n    <style>\n      \n    </style>\n\n    <script>\n      (function () {\n        function handle_message(ev) {\n          let { action, cmd_id } = ev.data;\n          const send_message = (payload) =>\n            parent.postMessage({ ...payload }, ev.origin);\n\n          const send_reply = (payload) => send_message({ ...payload, cmd_id });\n          const send_ok = (args) => send_reply({ action: 'cmd_ok', args });\n          const send_error = (message, stack) =>\n            send_reply({ action: 'cmd_error', message, stack });\n\n          if (action === 'eval') {\n            try {\n              const { script } = ev.data.args;\n              eval(script);\n              send_ok();\n            } catch (e) {\n              send_error(e.message, e.stack);\n            }\n          }\n\n          if (action === 'add_script') {\n            try {\n              const script = document.createElement('script');\n              script.src = ev.data.args;\n              script.onload = () => send_ok();\n              document.body.appendChild(script);\n            } catch (e) {\n              send_error(e.message, e.stack);\n            }\n          }\n\n          if (action === 'add_script_content') {\n            try {\n              const script = document.createElement('script');\n              script.text = ev.data.args;\n              script.type = 'text/javascript';\n              document.body.appendChild(script);\n              send_ok();\n            } catch (e) {\n              send_error(e.message, e.stack);\n            }\n          }\n\n          if (action === 'add_style') {\n            try {\n              const link = document.createElement('link');\n              link.rel = 'stylesheet';\n              link.href = ev.data.args;\n              link.onload = () => send_ok();\n              document.body.appendChild(link);\n            } catch (e) {\n              send_error(e.message, e.stack);\n            }\n          }\n\n          if (action === 'catch_clicks') {\n            try {\n              const top_origin = ev.origin;\n              document.body.addEventListener('click', (event) => {\n                if (event.which !== 1) return;\n                if (event.metaKey || event.ctrlKey || event.shiftKey) return;\n                if (event.defaultPrevented) return;\n\n                // ensure target is a link\n                let el = event.target;\n                while (el && el.nodeName !== 'A') el = el.parentNode;\n                if (!el || el.nodeName !== 'A') return;\n\n                if (\n                  el.hasAttribute('download') ||\n                  el.getAttribute('rel') === 'external' ||\n                  el.target\n                )\n                  return;\n\n                event.preventDefault();\n\n                if (el.href.startsWith(top_origin)) {\n                  const url = new URL(el.href);\n                  if (url.hash[0] === '#') {\n                    window.location.hash = url.hash;\n                    return;\n                  }\n                }\n\n                window.open(el.href, '_blank');\n              });\n              send_ok();\n            } catch (e) {\n              send_error(e.message, e.stack);\n            }\n          }\n        }\n\n        window.addEventListener('message', handle_message, false);\n\n        window.onerror = function (msg, url, lineNo, columnNo, error) {\n          try {\n            parent.postMessage({ action: 'error', value: error }, '*');\n          } catch (e) {\n            parent.postMessage({ action: 'error', value: msg }, '*');\n            parent.postMessage({ action: 'error', value: error }, '*');\n          }\n        };\n\n        window.addEventListener('unhandledrejection', (event) => {\n          parent.postMessage(\n            { action: 'unhandledrejection', value: event.reason },\n            '*'\n          );\n        });\n\n        let previous = { level: null, args: null };\n\n        ['clear', 'log', 'info', 'dir', 'warn', 'error', 'table'].forEach(\n          (level) => {\n            const original = console[level];\n            console[level] = (...args) => {\n              const stringifiedArgs = stringify(args);\n              if (\n                previous.level === level &&\n                previous.args &&\n                previous.args === stringifiedArgs\n              ) {\n                parent.postMessage(\n                  { action: 'console', level, duplicate: true },\n                  '*'\n                );\n              } else {\n                previous = { level, args: stringifiedArgs };\n\n                try {\n                  parent.postMessage({ action: 'console', level, args }, '*');\n                } catch (err) {\n                  parent.postMessage(\n                    { action: 'console', level: 'unclonable' },\n                    '*'\n                  );\n                }\n              }\n\n              original(...args);\n            };\n          }\n        );\n\n        [\n          { method: 'group', action: 'console_group' },\n          { method: 'groupEnd', action: 'console_group_end' },\n          { method: 'groupCollapsed', action: 'console_group_collapsed' },\n        ].forEach((group_action) => {\n          const original = console[group_action.method];\n          console[group_action.method] = (label) => {\n            parent.postMessage({ action: group_action.action, label }, '*');\n\n            original(label);\n          };\n        });\n\n        const timers = new Map();\n        const original_time = console.time;\n        const original_timelog = console.timeLog;\n        const original_timeend = console.timeEnd;\n\n        console.time = (label = 'default') => {\n          original_time(label);\n          timers.set(label, performance.now());\n        };\n        console.timeLog = (label = 'default') => {\n          original_timelog(label);\n          const now = performance.now();\n          if (timers.has(label)) {\n            parent.postMessage(\n              {\n                action: 'console',\n                level: 'system-log',\n                args: [`${label}: ${now - timers.get(label)}ms`],\n              },\n              '*'\n            );\n          } else {\n            parent.postMessage(\n              {\n                action: 'console',\n                level: 'system-warn',\n                args: [`Timer '${label}' does not exist`],\n              },\n              '*'\n            );\n          }\n        };\n        console.timeEnd = (label = 'default') => {\n          original_timeend(label);\n          const now = performance.now();\n          if (timers.has(label)) {\n            parent.postMessage(\n              {\n                action: 'console',\n                level: 'system-log',\n                args: [`${label}: ${now - timers.get(label)}ms`],\n              },\n              '*'\n            );\n          } else {\n            parent.postMessage(\n              {\n                action: 'console',\n                level: 'system-warn',\n                args: [`Timer '${label}' does not exist`],\n              },\n              '*'\n            );\n          }\n          timers.delete(label);\n        };\n\n        const original_assert = console.assert;\n        console.assert = (condition, ...args) => {\n          if (condition) {\n            const stack = new Error().stack;\n            parent.postMessage(\n              { action: 'console', level: 'assert', args, stack },\n              '*'\n            );\n          }\n          original_assert(condition, ...args);\n        };\n\n        const counter = new Map();\n        const original_count = console.count;\n        const original_countreset = console.countReset;\n\n        console.count = (label = 'default') => {\n          counter.set(label, (counter.get(label) || 0) + 1);\n          parent.postMessage(\n            {\n              action: 'console',\n              level: 'system-log',\n              args: `${label}: ${counter.get(label)}`,\n            },\n            '*'\n          );\n          original_count(label);\n        };\n\n        console.countReset = (label = 'default') => {\n          if (counter.has(label)) {\n            counter.set(label, 0);\n          } else {\n            parent.postMessage(\n              {\n                action: 'console',\n                level: 'system-warn',\n                args: `Count for '${label}' does not exist`,\n              },\n              '*'\n            );\n          }\n          original_countreset(label);\n        };\n\n        const original_trace = console.trace;\n\n        console.trace = (...args) => {\n          const stack = new Error().stack;\n          parent.postMessage(\n            { action: 'console', level: 'trace', args, stack },\n            '*'\n          );\n          original_trace(...args);\n        };\n\n        function stringify(args) {\n          try {\n            return JSON.stringify(args);\n          } catch (error) {\n            return null;\n          }\n        }\n      })(this);\n\n      // remove alert, set window context\n      (() => {\n        const original_alert = window.alert;\n        window.alert = function () {};\n\n        window.context = {\n          nft_json: {},\n          config: {},\n        };\n      })(this);\n    <\/script>\n  </head>\n  <body>\n    \x3c!-- NFTCODE --\x3e\n  </body>\n</html>\n")),u(o,"class","svelte-1bwdt9k"),p(o,"greyed-out",e[3]||z||e[2]),u(t,"class","beyondnft__sandbox svelte-1bwdt9k")},m(n,r){i(n,t,r),a(t,o),e[9](o),a(t,f),g&&g.m(t,null)},p(n,[e]){1&e&&r!==(r="allow-scripts allow-pointer-lock allow-popups "+n[0])&&u(o,"sandbox",r),12&e&&p(o,"greyed-out",n[3]||z||n[2]),n[3]?g||(g=W(),g.c(),g.m(t,null)):g&&(g.d(1),g=null)},i:n,o:n,d(n){n&&c(t),e[9](null),g&&g.d()}}}let z=!1;function B(n,e,t){let{code:o=""}=e,{proxy:r}=e,{json:s}=e,{owner_properties:a}=e,{sandbox_props:i=""}=e;const c=m();let l,d,u,p=0,f=[],g=[],h=f;var v;function y(){return s.interactive_nft?function(n){let e="";if(Array.isArray(n))for(const t of n){const n=t.type;"script"===n?e+=`<script type="text/javascript" src="${t.url}"><\/script>`:"style"===n?e+=`<script type="text/javascript">\n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\tconst link = document.createElement('link');\n\t\t\t\t\t\t\tlink.rel = 'stylesheet';\n\t\t\t\t\t\t\tlink.href = "${t.url}";\n\t\t\t\t\t\t\tdocument.body.appendChild(link);\n\t\t\t\t\t\t})()\n\t\t\t\t\t<\/script>`:console.log("Unknown dependency type "+n)}return e}(s.interactive_nft.dependencies):""}function w(n){t(3,d=n),c("error",n)}function $(n){h.push(u=n),f=f}function k(n,e){const t={level:"group",label:n,collapsed:e,logs:[]};h.push(t),g.push(h),h=t.logs,f=f}return v=()=>(t(5,r=new U(l,{on_fetch_progress:n=>{t(2,p=n)},on_error:n=>{$({level:"error",args:[n.value]}),w(n.value)},on_unhandled_rejection:n=>{let e=n.value;"string"==typeof e&&(e={message:e}),e.message="Uncaught (in promise): "+e.message,$({level:"error",args:[e]}),w(e)},on_console:n=>{"clear"===n.level?(h=f=[],$(n)):n.duplicate?function(){const n=h[h.length-1];n?(n.count=(n.count||1)+1,f=f):(u.count=1,$(u))}():$(n)},on_console_group:n=>{k(n.label,!1)},on_console_group_end:()=>{h=g.pop()},on_console_group_collapsed:n=>{k(n.label,!0)}})),l.addEventListener("load",(()=>{r.handle_links(),!d&&c("loaded")})),()=>{r.destroy()}),_().$$.on_mount.push(v),n.$$set=n=>{"code"in n&&t(6,o=n.code),"proxy"in n&&t(5,r=n.proxy),"json"in n&&t(7,s=n.json),"owner_properties"in n&&t(8,a=n.owner_properties),"sandbox_props"in n&&t(0,i=n.sandbox_props)},[i,l,p,d,function(n){let e=y();const t=function(){const n={};if(s.interactive_nft&&Array.isArray(s.interactive_nft.properties)){let e={};a&&"object"==typeof a&&(e=a);for(const t of s.interactive_nft.properties)n[t.name]=t.value,void 0!==e[t.name]&&(n[t.name]=e[t.name])}return n}(),r=`\n      window.context.properties = JSON.parse('${JSON.stringify(t)}');\n    `,i=`\n      window.context.nft_json = JSON.parse(${JSON.stringify(JSON.stringify(s))});\n    `;return e+=`<script type="text/javascript">${`\n      // specific p5 because it's causing troubles.\n      if (typeof p5 !== 'undefined' && p5.disableFriendlyErrors) {\n        p5.disableFriendlyErrors = true;\n        new p5();\n      }\n\n      ${r}\n      ${i}\n    `}<\/script>`,e+=o,n.replace("\x3c!-- NFTCODE --\x3e",e)},r,o,s,a,function(n){b[n?"unshift":"push"]((()=>{l=n,t(1,l)}))}]}class q extends P{constructor(n){var e;super(),document.getElementById("svelte-1bwdt9k-style")||((e=l("style")).id="svelte-1bwdt9k-style",e.textContent=".beyondnft__sandbox.svelte-1bwdt9k{background-color:white;border:none;width:100%;height:100%;position:relative}iframe.svelte-1bwdt9k{width:100%;height:100%;border:none;display:block}.greyed-out.svelte-1bwdt9k{filter:grayscale(50%) blur(1px);opacity:0.25}.beyondnft__sandbox__error.svelte-1bwdt9k{font-size:0.9em;position:absolute;top:0;left:0;padding:5px}",a(document.head,e)),J(this,n,B,Y,s,{code:6,proxy:5,json:7,owner_properties:8,sandbox_props:0})}}function H(e){let t;return{c(){t=d("Loading...")},m(n,e){i(n,t,e)},p:n,i:n,o:n,d(n){n&&c(t)}}}function I(n){let e,t,o;function r(e){n[6].call(null,e)}let s={code:n[1],owner_properties:n[2],sandbox_props:n[3],json:n[0]};return void 0!==n[4]&&(s.proxy=n[4]),e=new q({props:s}),b.push((()=>function(n,e,t){const o=n.$$.props[e];void 0!==o&&(n.$$.bound[o]=t,t(n.$$.ctx[o]))}(e,"proxy",r))),e.$on("loaded",n[7]),e.$on("error",n[8]),{c(){var n;(n=e.$$.fragment)&&n.c()},m(n,t){S(e,n,t),o=!0},p(n,o){const r={};var s;2&o&&(r.code=n[1]),4&o&&(r.owner_properties=n[2]),8&o&&(r.sandbox_props=n[3]),1&o&&(r.json=n[0]),!t&&16&o&&(t=!0,r.proxy=n[4],s=()=>t=!1,w.push(s)),e.$set(r)},i(n){o||(L(e.$$.fragment,n),o=!0)},o(n){O(e.$$.fragment,n),o=!1},d(n){T(e,n)}}}function G(n){let e,t,r,s;const a=[I,H],l=[];function u(n,e){return n[1]?0:1}return e=u(n),t=l[e]=a[e](n),{c(){t.c(),r=d("")},m(n,t){l[e].m(n,t),i(n,r,t),s=!0},p(n,[s]){let i=e;e=u(n),e===i?l[e].p(n,s):(C={r:0,c:[],p:C},O(l[i],1,1,(()=>{l[i]=null})),C.r||o(C.c),C=C.p,t=l[e],t||(t=l[e]=a[e](n),t.c()),L(t,1),t.m(r.parentNode,r))},i(n){s||(L(t),s=!0)},o(n){O(t),s=!1},d(n){l[e].d(n),n&&c(r)}}}function Q(n,e,t){const o=m();let{data:r={}}=e,{code:s=""}=e,{owner_properties:a=[]}=e,{sandbox_props:i=""}=e,c=null;return!s&&r.interactive_nft?r.interactive_nft.code?(s=r.interactive_nft.code,r.interactive_nft.code=null):r.interactive_nft.code_uri?fetch(r.interactive_nft.code_uri).then((n=>n.text())).then((n=>t(1,s=n))).catch((n=>{o("Error",new Error("Error while fetching "+r.interactive_nft.code_uri))})):o("Error",new Error("You need to provide code for this NFT to run")):o("Error",new Error("You need to provide code for this NFT to run")),n.$$set=n=>{"data"in n&&t(0,r=n.data),"code"in n&&t(1,s=n.code),"owner_properties"in n&&t(2,a=n.owner_properties),"sandbox_props"in n&&t(3,i=n.sandbox_props)},[r,s,a,i,c,function(){return c},function(n){c=n,t(4,c)},function(e){h(n,e)},function(e){h(n,e)}]}export default class extends P{constructor(n){super(),J(this,n,Q,G,s,{data:0,code:1,owner_properties:2,sandbox_props:3,getProxy:5})}get getProxy(){return this.$$.ctx[5]}}
